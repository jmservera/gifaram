{
	"$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
	"handler": "Microsoft.Azure.CreateUIDef",
	"version": "0.1.2-preview",
	"parameters": {
		"config": {
			"isWizard": false,
			"basics": {
				"location": {
					"visible": "[basics('createNewCluster')]",
					"allowedValues": [
						"eastus",
						"westcentralus",
						"westeurope"
					]
				},
				"resourceGroup": {
					"allowExisting": true
				}
			}
		},
		"basics": [
			{
				"name": "createNewCluster",
				"type": "Microsoft.Common.OptionsGroup",
				"label": "Create new dev cluster?",
				"defaultValue": "No",
				"toolTip": "Create new cluster",
				"constraints": {
					"allowedValues": [
						{
							"label": "Yes",
							"value": true
						},
						{
							"label": "No",
							"value": false
						}
					],
					"required": true
				},
				"visible": true
			}
		],
		"steps": [
			{
				"name": "clusterDetails",
				"label": "Cluster Details",
				"elements": [
					{
						"name": "existingClusterSection",
						"type": "Microsoft.Common.Section",
						"elements": [
							{
								"name": "clusterLookupControl",
								"type": "Microsoft.Solutions.ArmApiControl",
								"request": {
									"method": "GET",
									"path": "[concat(subscription().id, '/resourcegroups/', resourceGroup().name,  '/providers/Microsoft.ContainerService/managedClusters?api-version=2022-03-01')]"
								}
							},
							{
								"name": "existingClusterResourceName",
								"type": "Microsoft.Common.DropDown",
								"label": "AKS Cluster Name",
								"toolTip": "AKS Cluster Resource Name",
								"constraints": {
									"allowedValues": "[map(steps('clusterDetails').existingClusterSection.clusterLookupControl.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.name, '\"}')))]",
									"required": true
								}
							}
						],
						"visible": "[equals(basics('createNewCluster'), false)]"
					},
					{
						"name": "newClusterSection",
						"type": "Microsoft.Common.Section",
						"elements": [
							{
								"name": "aksVersionLookupControl",
								"type": "Microsoft.Solutions.ArmApiControl",
								"request": {
									"method": "GET",
									"path": "[concat(subscription().id, '/providers/Microsoft.ContainerService/locations/', location(),  '/orchestrators?api-version=2019-04-01&resource-type=managedClusters')]"
								}
							},
							{
								"name": "newClusterResourceName",
								"type": "Microsoft.Common.TextBox",
								"label": "AKS cluster name",
								"defaultValue": "",
								"toolTip": "Use only allowed characters",
								"constraints": {
									"required": true,
									"regex": "^[a-z0-9A-Z]{6,30}$",
									"validationMessage": "Only alphanumeric characters are allowed, and the value must be 6-30 characters long."
								}
							},
							{
								"name": "kubernetesVersion",
								"type": "Microsoft.Common.DropDown",
								"label": "Kubernetes version",
								"toolTip": "The version of Kubernetes that should be used for this cluster. You will be able to upgrade this version after creating the cluster.",
								"constraints": {
									"allowedValues": "[map(steps('clusterDetails').newClusterSection.aksVersionLookupControl.properties.orchestrators, (item) => parse(concat('{\"label\":\"', item.orchestratorVersion, '\",\"value\":\"', item.orchestratorVersion, '\"}')))]",
									"required": true
								}
							},
							{
								"name": "vmSize",
								"type": "Microsoft.Compute.SizeSelector",
								"label": "VM size",
								"toolTip": "The size of virtual machine for VM.",
								"recommendedSizes": [
									"Standard_B4ms",
									"Standard_DS2_v2",
									"Standard_D4s_v3"
								],
								"constraints": {
									"allowedSizes": [
										"Standard_B4ms",
										"Standard_DS2_v2",
										"Standard_D4s_v3"
									],
									"excludedSizes": []
								},
								"osPlatform": "Linux"
							},
							{
								"name": "enableAutoScaling",
								"type": "Microsoft.Common.CheckBox",
								"label": "Enable auto scaling",
								"toolTip": "Enable auto scaling",
								"defaultValue": true						
							},
							{
								"name": "vmCount",
								"type": "Microsoft.Common.Slider",
								"min": 1,
								"max": 10,
								"label": "VMCount",
								"subLabel": "",
								"defaultValue": 1,
								"showStepMarkers": false,
								"toolTip": "Specify VM count",
								"constraints": {
									"required": false
								},
								"visible": true
							}
						],
						"visible": "[basics('createNewCluster')]"
					}
				]
			},
			{
				"name": "extensionDetails",
				"label": "Cluster Extension Details",
				"elements": [
					{
						"name": "extensionResourceName",
						"type": "Microsoft.Common.TextBox",
						"label": "Cluster extension resource name",
						"defaultValue": "",
						"toolTip": "Only lowercase alphanumeric characters are allowed, and the value must be 6-30 characters long.",
						"constraints": {
							"required": true,
							"regex": "^[a-z0-9]{6,30}$",
							"validationMessage": "Only lowercase alphanumeric characters are allowed, and the value must be 6-30 characters long."
						},
						"visible": true
					},

                    {
                        "name": "TELEGRAM_DISABLE_NOTIFICATION",
                        "type": "Microsoft.Common.OptionsGroup",
                        "label": "Disable Telegram Notification?",
                        "defaultValue": "No",
                        "toolTip": "Disable Telegram Notification",
                        "constraints": {
                            "allowedValues": [
                                {
                                    "label": "Yes",
                                    "value": true
                                },
                                {
                                    "label": "No",
                                    "value": false
                                }
                            ],
                            "required": true
                        },
                        "visible": true
                    },
					{
						"name": "FFMPEG_FPS",
						"type": "Microsoft.Common.Slider",
                        "min":1,
                        "max":120,
						"label": "Frames per second",
                        "subLabel": "FPS",
                        "defaultValue": 10,
						"toolTip": "This will replace the FPS's value inside your values.yaml",
						"constraints": {
							"required": false
						}
					},
					{
						"name": "FFMPEG_WIDTH",
						"type": "Microsoft.Common.Slider",
                        "min":1,
                        "max":1920,
						"label": "Width of the video",
						"toolTip": "This will replace the width value inside your values.yaml",
						"defaultValue": 320,
						"constraints": {
							"required": false
						}
					},
                    {
						"name": "FFMPEG_NOAUDIO",
						"type": "Microsoft.Common.OptionsGroup",
						"label": "Disable audio",
                        "defaultValue": "Yes",
						"toolTip": "This will disable the audio",
						"constraints": {
							"allowedValues": [
                                {
                                    "label": "Yes",
                                    "value": true
                                },
                                {
                                    "label": "No",
                                    "value": false
                                }
                            ],
                            "required": true
						}
					},                    
                    {
						"name": "TELEGRAM_API_KEY",
						"type": "Microsoft.Common.TextBox",
						"label": "API Key for Telegram",
						"toolTip": "This will be used to send messages to your telegram bot",
						"defaultValue": "",
						"constraints": {
							"regex": "^.{1,}$",
							"validationMessage": "Please enter a valid API Key",
							"required": true
						},
						"visible": true
					},
                    {
						"name": "TELEGRAM_CHAT_ID",
						"type": "Microsoft.Common.TextBox",
						"label": "Chat ID for Telegram",
						"toolTip": "This will be used to send messages to your telegram bot",
						"defaultValue": "",
						"constraints": {
							"regex": "^-?[0-9]{1,}$",
							"validationMessage": "Please enter a valid Chat ID",
							"required": true
						},
						"visible": true
					}
				]
			},
            {
                "name": "storageDetails",
                "label": "Storage Details",
                "elements":[
                    {
                        "name": "StorageKeys",
                        "type": "Microsoft.Solutions.ArmApiControl",
                        "request": {
                          "method": "POST",
                          "path": "[concat(subscription().id, '/resourceGroups/',last(take(split(steps('storageDetails').StorageAccountSelector,'/'),5)),'/providers/Microsoft.Storage/storageAccounts/',last(take(split(steps('storageDetails').StorageAccountSelector,'/'),9)),'/listKeys?api-version=2022-09-01&$expand=kerb')]"
                        }
                      },
                      {
                        "name": "StorageApi",
                        "type": "Microsoft.Solutions.ArmApiControl",
                        "request": {
                          "method": "GET",
                          "path": "[concat(subscription().id, '/providers/Microsoft.Storage/storageAccounts?api-version=2022-09-01')]"
                        }
                      },
                      {
                        "name": "StorageAccountSelector",
                        "type": "Microsoft.Common.DropDown",
                        "label": "Storage Account",
                        "toolTip": "The storage account to drop the camera files.",
                        "constraints": {
						"allowedValues": "[map(steps('storageDetails').StorageApi.value, (item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\"}')))]",
                          "required": true
                        },
                        "visible": true
                      }
                ]
            }

		],
		"outputs": {
			"location": "[location()]",
			"createNewCluster": "[basics('createNewCluster')]",
			"clusterResourceName": "[if(basics('createNewCluster'), steps('clusterDetails').newClusterSection.newClusterResourceName, steps('clusterDetails').existingClusterSection.existingClusterResourceName)]",
			"kubernetesVersion": "[steps('clusterDetails').newClusterSection.kubernetesVersion]",
			"extensionResourceName": "[steps('extensionDetails').extensionResourceName]",
			"vmSize": "[steps('clusterDetails').newClusterSection.vmSize]",
			"vmEnableAutoScale": "[steps('clusterDetails').newClusterSection.enableAutoScaling]",
			"vmCount": "[steps('clusterDetails').newClusterSection.vmCount]",
			"TELEGRAM_DISABLE_NOTIFICATION": "[steps('extensionDetails').TELEGRAM_DISABLE_NOTIFICATION]",
			"FFMPEG_FPS": "[steps('extensionDetails').FFMPEG_FPS]",
			"FFMPEG_WIDTH": "[steps('extensionDetails').FFMPEG_WIDTH]",
			"FFMPEG_NOAUDIO": "[steps('extensionDetails').FFMPEG_NOAUDIO]",
			"TELEGRAM_API_KEY": "[steps('extensionDetails').TELEGRAM_API_KEY]",
			"TELEGRAM_CHAT_ID": "[steps('extensionDetails').TELEGRAM_CHAT_ID]",
			"storageURL":"[concat('DefaultEndpointsProtocol=https;AccountName=',last(take(split(steps('storageDetails').StorageAccountSelector,'/'),9)),';AccountKey=',first(steps('storageDetails').StorageKeys.keys).value,';EndpointSuffix=core.windows.net')]"
		}
	}
}